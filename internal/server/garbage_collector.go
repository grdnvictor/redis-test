package server

import (
	"log"
	"time"
)

// startExpirationGarbageCollector d√©marre le garbage collector pour les cl√©s expir√©es
func (redisServerInstance *RedisServerInstance) startExpirationGarbageCollector() {
	redisServerInstance.activeGoroutines.Add(1)
	go func() {
		defer redisServerInstance.activeGoroutines.Done()

		garbageCollectionTicker := time.NewTicker(redisServerInstance.serverConfiguration.MaintenanceConfiguration.ExpirationCheckInterval)
		defer garbageCollectionTicker.Stop()

		log.Printf("üßπ Garbage collector d√©marr√© (intervalle: %v)", redisServerInstance.serverConfiguration.MaintenanceConfiguration.ExpirationCheckInterval)

		for {
			select {
			case <-redisServerInstance.shutdownSignal:
				log.Printf("üßπ Arr√™t du garbage collector")
				return
			case <-garbageCollectionTicker.C:
				// Nettoyage des cl√©s expir√©es
				cleanedKeyCount := redisServerInstance.redisStorage.CleanupExpiredKeys()
				if cleanedKeyCount > 0 {
					log.Printf("üßπ Nettoyage: %d cl√©s expir√©es supprim√©es", cleanedKeyCount)
				}
			}
		}
	}()
}
