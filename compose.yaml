services:
  # Ton serveur Redis-Go
  redis-go:
    build: .
    ports:
      - "6379:6379"
    environment:
      - REDIS_HOST=0.0.0.0
      - REDIS_PORT=6379
      - REDIS_MAX_CONNECTIONS=1000
    networks:
      - redis-network
    restart: unless-stopped

  # Container avec redis-cli optimisé
  redis-cli:
    image: redis:7-alpine
    stop_grace_period: 1s
    depends_on:
      - redis-go
    networks:
      - redis-network
    stdin_open: true
    tty: true
    environment:
      # Variables pour améliorer l'expérience + UTF-8
      - TERM=xterm-256color
      - LANG=C.UTF-8
      - LC_ALL=C.UTF-8
      - REDISCLI_HISTFILE=/tmp/.rediscli_history
    volumes:
      # Garde l'historique entre les sessions
      - redis-cli-data:/tmp
    # Commande par défaut simple et propre
    command: redis-cli -h redis-go -p 6379 --no-auth-warning

  # Alternative : container de test avec scripts
#  redis-test:
#    image: redis:7-alpine
#    depends_on:
#      - redis-go
#    networks:
#      - redis-network
#    volumes:
#      - ./test-scripts:/scripts
#    # Lance des tests automatiques
#    command: >
#      sh -c "
#        echo 'Attente du serveur Redis-Go...' &&
#        sleep 3 &&
#        echo 'Test de base...' &&
#        redis-cli -h redis-go -p 6379 ping &&
#        echo 'Tests des commandes...' &&
#        redis-cli -h redis-go -p 6379 set test_key test_value &&
#        redis-cli -h redis-go -p 6379 get test_key &&
#        redis-cli -h redis-go -p 6379 del test_key &&
#        echo 'Tests terminés avec succès!'
#      "

networks:
  redis-network:
    driver: bridge

volumes:
  redis-cli-data: